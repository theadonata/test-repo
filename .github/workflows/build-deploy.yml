name: 'Test - Build - Deploy'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
  EKS_REGION: ${{ secrets.EKS_REGION }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  test-node-js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: "16.x"

      - name: Run test
        working-directory: node-js
        run: |
          npm install
          npm install express 
          npm install jest supertest
          npm test
  
  test-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.14'
          check-latest: true

      - name: Run test
        working-directory: go
        run: |
          go test *.go
  
  build:
    runs-on: ubuntu-latest
    needs: [test-node-js, test-go]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push NodeJS Image
        uses: docker/build-push-action@v3
        with:
          context: ./node-js
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-node-js-image:1.0.0

      - name: Build and push Go Image
        uses: docker/build-push-action@v3
        with:
          context: ./go
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-go-image:1.0.0

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EKS_REGION }}
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set AWS Env
        run: |
          aws --version
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $EKS_REGION
          aws sts get-caller-identity

      - name: Connect to EKS cluster 
        run: aws eks --region ${{ secrets.EKS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER }}

      - name: Deploy to AWS EKS
        working-directory: helm-charts
        run: |
          helm upgrade --install --force "go-app"
          helm upgrade --install --force "node-app"

